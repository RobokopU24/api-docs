"use strict";(self.webpackChunkrobokop_api_docs=self.webpackChunkrobokop_api_docs||[]).push([[7175],{98733:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>k,contentTitle:()=>g,default:()=>_,frontMatter:()=>u,metadata:()=>h,toc:()=>y});var s=t(87462),i=(t(67294),t(3905)),l=t(58219),m=(t(62316),t(51039)),n=t.n(m),r=(t(82723),t(9487)),o=(t(41429),t(5397)),p=t(4667),d=t(9472),c=t(85162);const u={id:"get-meta-knowledge-graph-1-4-meta-knowledge-graph-get-trapi-viral-proteome",title:"Meta knowledge graph representation of this TRAPI web service.",description:"Returns meta knowledge graph representation of this TRAPI web service.",sidebar_label:"Meta knowledge graph representation of this TRAPI web service.",hide_title:!0,hide_table_of_contents:!0,api:"eJztWFtv00oQ/iur1XlCaUIRT32rEAKECqUpPJwQrI09jpesd83uuhCs/ndm1oljJ04TcRFUal9S2zPffHPdS8W9mDt+NuHeikLyAf8grVDs0hoPJgc+HfAEXGxl4aXR/IxfgS+tdiwHL9hCm68KkjmwOapnzEJhwYH2gqSZSZnPpGPXV+eXr9hXmDEH9kbGMERDpgAbxF4lCDsHHxFk1EBGATI6jZ72fyCNQDq6IconxZrygCOHwmgH6FjFnzx+TD9dL8ZlHINzaanY1UoY9WKjPZIncVEUSsaB3+izI52KuziDXNB/XnoFCHOBxF6veb0gWsH6l1JaSCiq2qBdfEffHQXTLwtSNLPPEHv8gKwxDl7WXGvxloGXwmVipuAC+Ug9nzhvB4ysvkHJKd/FE0kiibRQlx3kNmPS3eIpkwgzl8pvx7BsC/dwHSMu6BiIbIuisFYs8VF6yGu9+j1KoWf8drvQnpXOm5zFSjiHZSQ8k3mhIMcEOXZR+rYpJnTCsNCyFQVOYKkoFeZyMkVo4dHKrPQHGFN0zteid3JvhbNR2IppYzMilEgmhyO7q9Ky1dhh1/iRYdsMdmO4QXCmtDH0A4zrbz36xsq5xOqJNkBa5Pcn0djCaEdI7aPSdbx/1nxh713L95kxCoRuI6VCOeiCURD2oL0ReU8od9zslMrwj4bhdt8cCI7tMTwTDliOo0Gx1FgmlKq5gPuoP+prmuNYrDcSlYPdwAH5CCX9kpaDzCTuJ/1ajbe73KrIq3qMHurg5yh1bPOS7FbfunLTnJDQIkASq4492MJr7Zad8QYQuwosReXTTBol9eJscn7y/3QiTr7T76P/+npyQ6MFetni1geLiAE22gNqdmi+/TWWoRJSCfZwgt6tRY/NUqOwlarG5vEjdlelZauxc+eIrbcG6FR0I1R5X2bjPuy/2fcP6/fD+v2wfveEYXPYIVp3Z685gFBZHVP0HQU6nOgyp4JXxizKgjR0Cpa6YLodlm2nG6hQ0398CjhnYilq6FZftF7/3Op17zZM/8jMp78Br5/rQ3ydgAwfRt1j+eh0+HTUd5BHDboVCPuGScVLq1A5875wZ6ORNTOzMMWJKJG28ENce93QoudyaCwmbhqK1XSqoRZFWMKs3X4yPKWkg83d23Rc30GsrKARZUSy3moZ53MRqqueGKHtf+meo5OAanPH8PtuUlbF7OGbHxUKZxp5EuJYrZIx4Tt3JJgOHlK3mxAMaoZxILWqolJ5b9XtLb3GorNLqiwMrrAyVFzdmhmIBLdnlMEFLCkNcQxFyALtkWgcbd+oUPKa0nnx/BrL6QfrlJRW",sidebar_class_name:"get api-method",info_path:"docs/automat/automat",custom_edit_url:null},g=void 0,h={unversionedId:"automat/get-meta-knowledge-graph-1-4-meta-knowledge-graph-get-trapi-viral-proteome",id:"automat/get-meta-knowledge-graph-1-4-meta-knowledge-graph-get-trapi-viral-proteome",title:"Meta knowledge graph representation of this TRAPI web service.",description:"Returns meta knowledge graph representation of this TRAPI web service.",source:"@site/docs/automat/get-meta-knowledge-graph-1-4-meta-knowledge-graph-get-trapi-viral-proteome.api.mdx",sourceDirName:"automat",slug:"/automat/get-meta-knowledge-graph-1-4-meta-knowledge-graph-get-trapi-viral-proteome",permalink:"/api-docs/docs/automat/get-meta-knowledge-graph-1-4-meta-knowledge-graph-get-trapi-viral-proteome",draft:!1,editUrl:null,tags:[],version:"current",frontMatter:{id:"get-meta-knowledge-graph-1-4-meta-knowledge-graph-get-trapi-viral-proteome",title:"Meta knowledge graph representation of this TRAPI web service.",description:"Returns meta knowledge graph representation of this TRAPI web service.",sidebar_label:"Meta knowledge graph representation of this TRAPI web service.",hide_title:!0,hide_table_of_contents:!0,api:"eJztWFtv00oQ/iur1XlCaUIRT32rEAKECqUpPJwQrI09jpesd83uuhCs/ndm1oljJ04TcRFUal9S2zPffHPdS8W9mDt+NuHeikLyAf8grVDs0hoPJgc+HfAEXGxl4aXR/IxfgS+tdiwHL9hCm68KkjmwOapnzEJhwYH2gqSZSZnPpGPXV+eXr9hXmDEH9kbGMERDpgAbxF4lCDsHHxFk1EBGATI6jZ72fyCNQDq6IconxZrygCOHwmgH6FjFnzx+TD9dL8ZlHINzaanY1UoY9WKjPZIncVEUSsaB3+izI52KuziDXNB/XnoFCHOBxF6veb0gWsH6l1JaSCiq2qBdfEffHQXTLwtSNLPPEHv8gKwxDl7WXGvxloGXwmVipuAC+Ug9nzhvB4ysvkHJKd/FE0kiibRQlx3kNmPS3eIpkwgzl8pvx7BsC/dwHSMu6BiIbIuisFYs8VF6yGu9+j1KoWf8drvQnpXOm5zFSjiHZSQ8k3mhIMcEOXZR+rYpJnTCsNCyFQVOYKkoFeZyMkVo4dHKrPQHGFN0zteid3JvhbNR2IppYzMilEgmhyO7q9Ky1dhh1/iRYdsMdmO4QXCmtDH0A4zrbz36xsq5xOqJNkBa5Pcn0djCaEdI7aPSdbx/1nxh713L95kxCoRuI6VCOeiCURD2oL0ReU8od9zslMrwj4bhdt8cCI7tMTwTDliOo0Gx1FgmlKq5gPuoP+prmuNYrDcSlYPdwAH5CCX9kpaDzCTuJ/1ajbe73KrIq3qMHurg5yh1bPOS7FbfunLTnJDQIkASq4492MJr7Zad8QYQuwosReXTTBol9eJscn7y/3QiTr7T76P/+npyQ6MFetni1geLiAE22gNqdmi+/TWWoRJSCfZwgt6tRY/NUqOwlarG5vEjdlelZauxc+eIrbcG6FR0I1R5X2bjPuy/2fcP6/fD+v2wfveEYXPYIVp3Z685gFBZHVP0HQU6nOgyp4JXxizKgjR0Cpa6YLodlm2nG6hQ0398CjhnYilq6FZftF7/3Op17zZM/8jMp78Br5/rQ3ydgAwfRt1j+eh0+HTUd5BHDboVCPuGScVLq1A5875wZ6ORNTOzMMWJKJG28ENce93QoudyaCwmbhqK1XSqoRZFWMKs3X4yPKWkg83d23Rc30GsrKARZUSy3moZ53MRqqueGKHtf+meo5OAanPH8PtuUlbF7OGbHxUKZxp5EuJYrZIx4Tt3JJgOHlK3mxAMaoZxILWqolJ5b9XtLb3GorNLqiwMrrAyVFzdmhmIBLdnlMEFLCkNcQxFyALtkWgcbd+oUPKa0nnx/BrL6QfrlJRW",sidebar_class_name:"get api-method",info_path:"docs/automat/automat",custom_edit_url:null},sidebar:"openApiSidebar",previous:{title:"Metadata about the knowledge graph.",permalink:"/api-docs/docs/automat/metadata-metadata-get-viral-proteome"},next:{title:"Test data for usage by the SRI Testing Harness.",permalink:"/api-docs/docs/automat/get-sri-testing-data-1-4-sri-testing-data-get-trapi-viral-proteome"}},k={},y=[{value:"Request",id:"request",level:2}],b={toc:y},f="wrapper";function _(e){let{components:a,...t}=e;return(0,i.kt)(f,(0,s.Z)({},b,t,{components:a,mdxType:"MDXLayout"}),(0,i.kt)("h1",{className:"openapi__heading"},"Meta knowledge graph representation of this TRAPI web service."),(0,i.kt)(n(),{method:"get",path:"/viral-proteome/1.4/meta_knowledge_graph",mdxType:"MethodEndpoint"}),(0,i.kt)("p",null,"Returns meta knowledge graph representation of this TRAPI web service."),(0,i.kt)("details",null,(0,i.kt)("summary",null,"Schema"),(0,i.kt)("h2",{id:"request"},"Request"),(0,i.kt)("div",null,(0,i.kt)("div",null,(0,i.kt)(l.Z,{mdxType:"ApiTabs"},(0,i.kt)(c.default,{label:"200",value:"200",mdxType:"TabItem"},(0,i.kt)("div",null,(0,i.kt)("p",null,"Successful Response")),(0,i.kt)("div",null,(0,i.kt)(r.Z,{className:"openapi-tabs__mime",schemaType:"response",mdxType:"MimeTabs"},(0,i.kt)(c.default,{label:"application/json",value:"application/json",mdxType:"TabItem"},(0,i.kt)(d.default,{className:"openapi-tabs__schema",mdxType:"SchemaTabs"},(0,i.kt)(c.default,{label:"Schema",value:"Schema",mdxType:"TabItem"},(0,i.kt)("details",{style:{},className:"openapi-markdown__details response","data-collapsed":!1,open:!0},(0,i.kt)("summary",{style:{},className:"openapi-markdown__details-summary-response"},(0,i.kt)("strong",null,"Schema")),(0,i.kt)("div",{style:{textAlign:"left",marginLeft:"1rem"}}),(0,i.kt)("ul",{style:{marginLeft:"1rem"}},(0,i.kt)(p.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{},className:"openapi-markdown__details"},(0,i.kt)("summary",{style:{}},(0,i.kt)("span",{className:"openapi-schema__container"},(0,i.kt)("strong",{className:"openapi-schema__property"},"nodes"),(0,i.kt)("span",{className:"openapi-schema__name"}," object"),(0,i.kt)("span",{className:"openapi-schema__divider"}),(0,i.kt)("span",{className:"openapi-schema__required"},"required"))),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,i.kt)("p",null,"Custom class that implements MutableMapping and is hashable")),(0,i.kt)(p.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{},className:"openapi-markdown__details"},(0,i.kt)("summary",{style:{}},(0,i.kt)("span",{className:"openapi-schema__container"},(0,i.kt)("strong",{className:"openapi-schema__property"},"property name*"),(0,i.kt)("span",{className:"openapi-schema__name"}," MetaNode"))),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,i.kt)("p",null,"Custom base model for all classes"),(0,i.kt)("p",null,"This provides hash and equality methods.")),(0,i.kt)(p.Z,{collapsible:!1,name:"id_prefixes",required:!0,schemaName:"string[]",qualifierMessage:void 0,schema:{title:"HashableSequence[str]",type:"array",items:{type:"string"},description:"Custom class that implements MutableSequence and is hashable",default:[]},mdxType:"SchemaItem"}),(0,i.kt)(p.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{},className:"openapi-markdown__details"},(0,i.kt)("summary",{style:{}},(0,i.kt)("span",{className:"openapi-schema__container"},(0,i.kt)("strong",{className:"openapi-schema__property"},"attributes"),(0,i.kt)("span",{className:"openapi-schema__name"}," object[]"))),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,i.kt)("p",null,"Custom class that implements MutableSequence and is hashable")),(0,i.kt)("li",null,(0,i.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,i.kt)(p.Z,{collapsible:!1,name:"attribute_type_id",required:!0,schemaName:"Attribute Type Id",qualifierMessage:void 0,schema:{title:"Attribute Type Id",type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(p.Z,{collapsible:!1,name:"attribute_source",required:!1,schemaName:"Attribute Source",qualifierMessage:void 0,schema:{title:"Attribute Source",type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(p.Z,{collapsible:!1,name:"original_attribute_names",required:!1,schemaName:"string[]",qualifierMessage:void 0,schema:{title:"HashableSequence[str]",type:"array",items:{type:"string"},description:"Custom class that implements MutableSequence and is hashable",default:[]},mdxType:"SchemaItem"}),(0,i.kt)(p.Z,{collapsible:!1,name:"constraint_use",required:!1,schemaName:"Constraint Use",qualifierMessage:void 0,schema:{title:"Constraint Use",type:"boolean",default:!1},mdxType:"SchemaItem"}),(0,i.kt)(p.Z,{collapsible:!1,name:"constraint_name",required:!1,schemaName:"Constraint Name",qualifierMessage:void 0,schema:{title:"Constraint Name",type:"string"},mdxType:"SchemaItem"}),(0,i.kt)("li",null,(0,i.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]"))))))))))),(0,i.kt)(p.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{},className:"openapi-markdown__details"},(0,i.kt)("summary",{style:{}},(0,i.kt)("span",{className:"openapi-schema__container"},(0,i.kt)("strong",{className:"openapi-schema__property"},"edges"),(0,i.kt)("span",{className:"openapi-schema__name"}," object[]"),(0,i.kt)("span",{className:"openapi-schema__divider"}),(0,i.kt)("span",{className:"openapi-schema__required"},"required"))),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,i.kt)("p",null,"Custom class that implements MutableSequence and is hashable")),(0,i.kt)("li",null,(0,i.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,i.kt)(p.Z,{collapsible:!1,name:"subject",required:!0,schemaName:"Subject",qualifierMessage:"**Possible values:** Value must match regular expression `^biolink:[A-Z][a-zA-Z]*$`",schema:{title:"Subject",pattern:"^biolink:[A-Z][a-zA-Z]*$",type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(p.Z,{collapsible:!1,name:"predicate",required:!0,schemaName:"Predicate",qualifierMessage:"**Possible values:** Value must match regular expression `^biolink:[a-z][a-z_]*$`",schema:{title:"Predicate",pattern:"^biolink:[a-z][a-z_]*$",type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(p.Z,{collapsible:!1,name:"object",required:!0,schemaName:"Object",qualifierMessage:"**Possible values:** Value must match regular expression `^biolink:[A-Z][a-zA-Z]*$`",schema:{title:"Object",pattern:"^biolink:[A-Z][a-zA-Z]*$",type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(p.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{},className:"openapi-markdown__details"},(0,i.kt)("summary",{style:{}},(0,i.kt)("span",{className:"openapi-schema__container"},(0,i.kt)("strong",{className:"openapi-schema__property"},"qualifiers"),(0,i.kt)("span",{className:"openapi-schema__name"}," object[]"))),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,i.kt)("p",null,"Custom class that implements MutableSequence and is hashable")),(0,i.kt)("li",null,(0,i.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,i.kt)(p.Z,{collapsible:!1,name:"qualifier_type_id",required:!0,schemaName:"Qualifier Type Id",qualifierMessage:void 0,schema:{title:"Qualifier Type Id",type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(p.Z,{collapsible:!1,name:"applicable_values",required:!1,schemaName:"string[]",qualifierMessage:void 0,schema:{title:"HashableSequence[str]",type:"array",items:{type:"string"},description:"Custom class that implements MutableSequence and is hashable",default:[]},mdxType:"SchemaItem"}),(0,i.kt)("li",null,(0,i.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]"))))),(0,i.kt)(p.Z,{collapsible:!0,className:"schemaItem",mdxType:"SchemaItem"},(0,i.kt)("details",{style:{},className:"openapi-markdown__details"},(0,i.kt)("summary",{style:{}},(0,i.kt)("span",{className:"openapi-schema__container"},(0,i.kt)("strong",{className:"openapi-schema__property"},"attributes"),(0,i.kt)("span",{className:"openapi-schema__name"}," object[]"))),(0,i.kt)("div",{style:{marginLeft:"1rem"}},(0,i.kt)("div",{style:{marginTop:".5rem",marginBottom:".5rem"}},(0,i.kt)("p",null,"Custom class that implements MutableSequence and is hashable")),(0,i.kt)("li",null,(0,i.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem",paddingBottom:".5rem"}},"Array [")),(0,i.kt)(p.Z,{collapsible:!1,name:"attribute_type_id",required:!0,schemaName:"Attribute Type Id",qualifierMessage:void 0,schema:{title:"Attribute Type Id",type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(p.Z,{collapsible:!1,name:"attribute_source",required:!1,schemaName:"Attribute Source",qualifierMessage:void 0,schema:{title:"Attribute Source",type:"string"},mdxType:"SchemaItem"}),(0,i.kt)(p.Z,{collapsible:!1,name:"original_attribute_names",required:!1,schemaName:"string[]",qualifierMessage:void 0,schema:{title:"HashableSequence[str]",type:"array",items:{type:"string"},description:"Custom class that implements MutableSequence and is hashable",default:[]},mdxType:"SchemaItem"}),(0,i.kt)(p.Z,{collapsible:!1,name:"constraint_use",required:!1,schemaName:"Constraint Use",qualifierMessage:void 0,schema:{title:"Constraint Use",type:"boolean",default:!1},mdxType:"SchemaItem"}),(0,i.kt)(p.Z,{collapsible:!1,name:"constraint_name",required:!1,schemaName:"Constraint Name",qualifierMessage:void 0,schema:{title:"Constraint Name",type:"string"},mdxType:"SchemaItem"}),(0,i.kt)("li",null,(0,i.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]"))))),(0,i.kt)(p.Z,{collapsible:!1,name:"knowledge_types",required:!1,schemaName:"KnowledgeType[]",qualifierMessage:"**Possible values:** [`lookup`, `inferred`]",schema:{title:"HashableSequence[KnowledgeType]",type:"array",items:{title:"KnowledgeType",enum:["lookup","inferred"],type:"string",description:"Knowledge Type."},description:"Custom class that implements MutableSequence and is hashable",default:[]},mdxType:"SchemaItem"}),(0,i.kt)(p.Z,{collapsible:!1,name:"association",required:!1,schemaName:"Association",qualifierMessage:"**Possible values:** Value must match regular expression `^biolink:[A-Z][a-zA-Z]*$`",schema:{title:"Association",pattern:"^biolink:[A-Z][a-zA-Z]*$",type:"string"},mdxType:"SchemaItem"}),(0,i.kt)("li",null,(0,i.kt)("div",{style:{fontSize:"var(--ifm-code-font-size)",opacity:"0.6",marginLeft:"-.5rem"}},"]")))))))),(0,i.kt)(c.default,{label:"Example (from schema)",value:"Example (from schema)",mdxType:"TabItem"},(0,i.kt)(o.Z,{responseExample:'{\n  "nodes": {},\n  "edges": [\n    {\n      "subject": "string",\n      "predicate": "string",\n      "object": "string",\n      "qualifiers": [\n        {\n          "qualifier_type_id": "string",\n          "applicable_values": [\n            "string"\n          ]\n        }\n      ],\n      "attributes": [\n        {\n          "attribute_type_id": "string",\n          "attribute_source": "string",\n          "original_attribute_names": [\n            "string"\n          ],\n          "constraint_use": false,\n          "constraint_name": "string"\n        }\n      ],\n      "knowledge_types": [\n        "lookup"\n      ],\n      "association": "string"\n    }\n  ]\n}',language:"json",mdxType:"ResponseSamples"}))))))))))))}_.isMDXComponent=!0}}]);